.TH quick_xslt 7 "Miscellaneous Information Manual"
.SH NAME
.B quick_xslt
\- Grossly inadequate guide to XSLT
.SH DESCRIPTION
.PP
An extremely humble beginning of a cheatsheet while I try to
recall XSLT coding from several years ago.
The purpose of this document is to record tiny concepts and techinques
that I recall or rediscover on the way to developing a new XSLT
stylesheet for parsing Doxygen XML output.
.SH TRIVIA
.PP
This will be haphazard until I collect enough information that it
make sense to organize it.

.SH USEFUL VARIABLES
.TS
tab(|);
lx l.
<xsl:variable name=\(dqnl\(dq select\(dq\(aq&#10;\(aq\(dq />|newline character
.TE

.SH USEFUL FUNCTIONS
.nr ohyph \n[.hy]
.PP
The page,
.UR https://www.w3schools.com/xml/xsl_functions.asp
.UE ,
documents many functions.
The following list is a subset of the ones I find most useful.
.TP
.B concat \c
.RI ( string ", " string ", " ... )
Concatenate strings in the argument list.
.TP
.B string-length \c
.RI ( string )
Returns length of string
.TP
.B substring \c
.RI ( string ", " start ", " len )
Returns substring of string.
Letter indexing begins at 1.
The
.I len
parameter can be omitted to extract the rest of the string.
.TP
.B normalize-space \c
.RI ( string )
Remove leading, trailing spaces, replaces all spaces-strings with a single space.
.TP
.B upper-case \c
.RI ( string )
Returns string with lower case characters translated to upper-case.
.TP
.B lower-case \c
.RI ( string )
Returns string with upper case characters translated to lower-case.
.TP
.B translate \c
.RI ( target , match , replace )
Translate target by replacing letters in select with a letter at the same offset in replacements
.TP
.B escape-uri \c
.RI ( string ", " esc-res )
Look this one up yourself
.TP
.B contains \c
.RI ( target ", " pattern )
True if pattern in target string
.TP
.B starts-with \c
.RI ( target ", " pattern )
True if target string starts with pattern string
.TP
.B ends-with \c
.RI ( target ", " pattern )
True if target string ends with pattern string
.TP
.B matches \c
.RI ( target ", " pattern )
True if pattern found in target
.TP
.B replace \c
.RI ( target ", " pattern ", " replace )
Replaces pattern matches in target with contents of replace

